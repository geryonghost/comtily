# Secrets
# apiVersion: v1
# data:
#   password: cGFzc3dvcmQxMjMK  # echo "password123" | base64
#   username: ZGJhZG1pbgo=  # echo "dbadmin" | base64 
# kind: Secret
# metadata:
#   name: mongo
#   namespace: comtily

---
# Deployment (Pods)
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongo
  name: mongo
  namespace: comtily
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - name: mongo
        image: mongo
        imagePullPolicy: "IfNotPresent"
        args: ["--dbpath","/data/db"]
        # livenessProbe:
        #   exec:
        #     command:
        #       - mongo
        #       - --disableImplicitSessions
        #       - --eval
        #       - "db.adminCommand('ping')"
          # initialDelaySeconds: 30
          # periodSeconds: 10
          # timeoutSeconds: 5
          # successThreshold: 1
          # failureThreshold: 6
        # readinessProbe:
        #   exec:
        #     command:
        #       - mongo
        #       - --disableImplicitSessions
        #       - --eval
        #       - "db.adminCommand('ping')"
          # initialDelaySeconds: 30
          # periodSeconds: 10
          # timeoutSeconds: 5
          # successThreshold: 1
          # failureThreshold: 6
        # env:
        # - name: MONGO_INITDB_ROOT_USERNAME
          # valueFrom:
          #   secretKeyRef:
          #     name: mongo
          #     key: username
        # - name: MONGO_INITDB_ROOT_PASSWORD
          # valueFrom:
          #   secretKeyRef:
          #     name: mongo
          #     key: password
        # - name: MONGO_INITDB_DATABASE
        #   value: admin
        volumeMounts:
        - name: "mongo-data-dir"
          mountPath: "/data/db"
      volumes:
      - name: "mongo-data-dir"
        persistentVolumeClaim:
          claimName: "mongo"

---
# Service
apiVersion: v1
kind: Service
metadata:
   name: mongo
   namespace: comtily
spec:
   type: NodePort
   selector:
      app: mongo
   ports:
      - port: 27017
        protocol: TCP
        targetPort: 27017
        nodePort: 32000
status:
  loadBalancer: {}